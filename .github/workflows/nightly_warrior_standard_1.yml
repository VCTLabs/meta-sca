name: "[warrior]-classic"

on:
  schedule:
    - cron: "30 12 * * *"

jobs:
  qemux86:
    name: "build"
    env:
      DISTRO: scatest
      MACHINE: qemux86
      SCABRANCH: warrior
      ENABLEMETAOE: 0
      ENABLEMETACLANG: 0
      PARAMFILE: standard_01
      MAXRUNTIME: 12900s
      PYTHONIOENCODING: utf8
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8
      LANGUAGE: en_US.UTF-8

    runs-on: ubuntu-latest

    container:
      image: privkweihmann/yocto-sca-minimal:latest
      env:
        WORKSPACE: /opt/build
        WEB_REPOSITORY: priv-kweihmann/priv-kweihmann.github.io
      volumes:
        - ${{ github.workspace }}:/opt/build

    steps:
      - name: Check out poky
        run: |
          git clone git://git.yoctoproject.org/poky.git/ -b $SCABRANCH ${WORKSPACE}/poky
        shell: bash
      - name: Check out meta-sca
        run: |
          git clone https://github.com/priv-kweihmann/meta-sca.git -b $SCABRANCH ${WORKSPACE}/meta-sca
      - if: env.ENABLEMETAOE == '1'
        name: Check out meta-oe
        run: |
          git clone git://git.openembedded.org/meta-openembedded -b $SCABRANCH ${WORKSPACE}/meta-oe
        shell: bash
      - if: env.ENABLEMETACLANG == '1'
        name: Check out meta-clang
        run: |
          git clone https://github.com/kraj/meta-clang.git -b $SCABRANCH ${WORKSPACE}/meta-clang
      - name: Setup poky
        run: |
          cd ${WORKSPACE} 
          source poky/oe-init-build-env && rm -f bitbake.sock && rm -f bitbake.lock
        shell: bash
      - name: add meta-sca
        run: |
          cd ${WORKSPACE}
          source poky/oe-init-build-env && rm -f bitbake.sock && rm -f bitbake.lock
          bitbake-layers add-layer ${WORKSPACE}/meta-sca
        shell: bash
      - if: env.ENABLEMETAOE == '1'
        name: add meta-oe
        run: |
          cd ${WORKSPACE}
          source poky/oe-init-build-env && rm -f bitbake.sock && rm -f bitbake.lock
          bitbake-layers add-layer ${WORKSPACE}/meta-oe/meta-oe
        shell: bash
      - if: env.ENABLEMETACLANG == '1'
        name: add meta-clang
        run: |
          cd ${WORKSPACE}
          source poky/oe-init-build-env && rm -f bitbake.sock && rm -f bitbake.lock
          bitbake-layers add-layer ${WORKSPACE}/meta-clang
        shell: bash
      - name: prepare local.conf
        run: |
          cd ${WORKSPACE}
          source poky/oe-init-build-env && rm -f bitbake.sock && rm -f bitbake.lock
          echo 'INHERIT +="rm_work"' >> conf/local.conf
          echo 'SCA_VERBOSE_OUTPUT = "1"' >> conf/local.conf
          echo 'BB_DISKMON_DIRS = ""' >> conf/local.conf
          echo 'BB_GIT_SHALLOW = "1"' >> conf/local.conf
          echo 'BB_GIT_SHALLOW_DEPTH = "1"' >> conf/local.conf
          echo 'BB_GENERATE_SHALLOW_TARBALLS = "1"' >> conf/local.conf
        shell: bash
      - name: set modules
        run: |
          cd ${WORKSPACE}
          source poky/oe-init-build-env && rm -f bitbake.sock && rm -f bitbake.lock
          mods=$(cat ${WORKSPACE}/meta-sca/recipes-sca-test/lang_$PARAMFILE.txt | tr '\n' ' ')
          echo "SCA_AVAILABLE_MODULES = \"${mods}\"" >> conf/local.conf
        shell: bash
      - name: build kernel
        run: |
          cd ${WORKSPACE}
          source poky/oe-init-build-env && rm -f bitbake.sock && rm -f bitbake.lock
          eval $(bitbake busybox -e | grep "^DL_DIR") && rm -f bitbake.sock && rm -f bitbake.lock
          bitbake linux-yocto && rm -f bitbake.sock && rm -f bitbake.lock
          [ -n "${DL_DIR}" ] && rm -rf ${DL_DIR}/*
        shell: bash
      - name: build
        run: |
          cd ${WORKSPACE}
          source poky/oe-init-build-env && rm -f bitbake.sock && rm -f bitbake.lock
          eval $(bitbake busybox -e | grep "^DL_DIR") && rm -f bitbake.sock && rm -f bitbake.lock
          eval $(bitbake busybox -e | grep "^SSTATE_DIR") && rm -f bitbake.sock && rm -f bitbake.lock
          eval $(bitbake busybox -e | grep "^TMPDIR") && rm -f bitbake.sock && rm -f bitbake.lock
          timeout --foreground --kill-after=60s $MAXRUNTIME ${WORKSPACE}/meta-sca/recipes-sca-test/test_$PARAMFILE.sh || if [ $? == 124 ]; then echo "Timeout"; else exit 1; fi;
          rm -f bitbake.sock && rm -f bitbake.lock
          [ -n "${DL_DIR}" ] && rm -rf ${DL_DIR}
          [ -n "${SSTATE_DIR}" ] && rm -rf ${SSTATE_DIR}
          find ${TMPDIR} -type d -maxdepth 1 -mindepth 1 -not -name "deploy" -exec rm -rf {} \;
          bitbake-layers remove-layer ${WORKSPACE}/meta-oe/meta-oe || true
          bitbake-layers remove-layer ${WORKSPACE}/meta-clang || true
        shell: bash
      - name: get latest webdeloy
        run: |
          cd ${WORKSPACE}
          timeout --foreground --kill-after=60s 300s git clone https://github.com/${WEB_REPOSITORY}.git ${WORKSPACE}/website || exit 0;
        shell: bash
      - name: export findings
        run: |
          cd ${WORKSPACE}
          source poky/oe-init-build-env && rm -f bitbake.sock && rm -f bitbake.lock
          eval $(bitbake busybox -e | grep "^SCA_EXPORT_DIR") && rm -f bitbake.sock && rm -f bitbake.lock
          eval $(bitbake busybox -e | grep "^SCA_EXPORT_FINDING_DIR") && rm -f bitbake.sock && rm -f bitbake.lock
          cd ${WORKSPACE}/website
          ./tools/report ${SCA_EXPORT_DIR} ${SCA_EXPORT_FINDING_DIR} data/${SCABRANCH}/${PARAMFILE}.json
          ./tools/jsonmerge data/${SCABRANCH}/result.json data/${SCABRANCH}/*.json
          git add .
          git config --local user.email "web@deploy.bot"
          git config --local user.name "Webdeploy bot"
          git remote rm origin
          git remote add origin https://priv-kweihmann:${{ secrets.WEBDEPLOY }}@github.com/${WEB_REPOSITORY}.git
          git diff --quiet && git diff --staged --quiet || (git commit --amend -m "Update findings"; git push origin master --force) || true
          rm -rf ${WORKSPACE}/website
        shell: bash
      - name: test results
        run: |
          cd ${WORKSPACE}
          source poky/oe-init-build-env && rm -f bitbake.sock && rm -f bitbake.lock
          eval $(bitbake busybox -e | grep "^SCA_EXPORT_DIR") && rm -f bitbake.sock && rm -f bitbake.lock
          ${WORKSPACE}/meta-sca/scripts/check_results $SCA_EXPORT_DIR $(cat ${WORKSPACE}/meta-sca/recipes-sca-test/lang_$PARAMFILE.txt | tr '\n' ' ') || true
        shell: bash